{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport setAuthToken from '../utils/setAuthToken';\nimport { REGISTER_FAIL, REGISTER_SUCCESS, USER_LOADED, AUTH_ERROR } from './types';\nexport const loadUser = () => dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {} catch (error) {}\n};\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (error) {\n    const errors = error.response.data.errors;\n\n    if (errors) {\n      errors.forEach(err => dispatch(setAlert(err.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["/home/user/work/devconnector/client/src/actions/auth.js"],"names":["axios","setAlert","setAuthToken","REGISTER_FAIL","REGISTER_SUCCESS","USER_LOADED","AUTH_ERROR","loadUser","dispatch","localStorage","token","error","register","name","email","password","config","headers","body","JSON","stringify","res","post","type","payload","data","errors","response","forEach","err","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,SAAvB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,SACIC,aADJ,EAEIC,gBAFJ,EAGIC,WAHJ,EAIIC,UAJJ,QAKO,SALP;AAOA,OAAO,MAAMC,QAAQ,GAAG,MAAMC,QAAQ,IAAI;AACtC,MAAGC,YAAY,CAACC,KAAhB,EAAsB;AAClBR,IAAAA,YAAY,CAACO,YAAY,CAACC,KAAd,CAAZ;AACH;;AAED,MAAI,CAEH,CAFD,CAEE,OAAOC,KAAP,EAAc,CAEf;AACJ,CAVM;AAeP,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA,KAAP;AAAcC,EAAAA;AAAd,CAAD,KAA6B,MAAMP,QAAN,IAAkB;AACnE,QAAMQ,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADE,GAAf;AAMA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAACP,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA;AAAd,GAAf,CAAb;;AACA,MAAI;AACA,UAAMM,GAAG,GAAG,MAAMrB,KAAK,CAACsB,IAAN,CAAW,YAAX,EAAyBJ,IAAzB,EAA+BF,MAA/B,CAAlB;AAEAR,IAAAA,QAAQ,CAAC;AACLe,MAAAA,IAAI,EAAEnB,gBADD;AAELoB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAIH,GAPD,CAOE,OAAOd,KAAP,EAAc;AAEZ,UAAMe,MAAM,GAAGf,KAAK,CAACgB,QAAN,CAAeF,IAAf,CAAoBC,MAAnC;;AAEA,QAAGA,MAAH,EAAW;AACPA,MAAAA,MAAM,CAACE,OAAP,CAAeC,GAAG,IAAIrB,QAAQ,CAACP,QAAQ,CAAC4B,GAAG,CAACC,GAAL,EAAU,QAAV,CAAT,CAA9B;AACH;;AACDtB,IAAAA,QAAQ,CAAC;AACLe,MAAAA,IAAI,EAAEpB;AADD,KAAD,CAAR;AAGH;AACJ,CA1BM","sourcesContent":["import axios from 'axios'\nimport {setAlert} from './alert'\nimport setAuthToken from '../utils/setAuthToken'\nimport {\n    REGISTER_FAIL,\n    REGISTER_SUCCESS,\n    USER_LOADED,\n    AUTH_ERROR\n} from './types'\n\nexport const loadUser = () => dispatch => {\n    if(localStorage.token){\n        setAuthToken(localStorage.token)\n    }\n\n    try {\n        \n    } catch (error) {\n        \n    }\n}\n\n\n\n\nexport const register = ({name, email, password}) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    const body = JSON.stringify({name, email, password})\n    try {\n        const res = await axios.post('/api/users', body, config)\n\n        dispatch({\n            type: REGISTER_SUCCESS,\n            payload: res.data\n        })\n    } catch (error) {\n\n        const errors = error.response.data.errors\n        \n        if(errors) {\n            errors.forEach(err => dispatch(setAlert(err.msg, 'danger')));\n        }\n        dispatch({\n            type: REGISTER_FAIL \n        })\n    }\n} "]},"metadata":{},"sourceType":"module"}