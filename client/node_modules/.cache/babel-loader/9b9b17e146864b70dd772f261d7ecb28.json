{"ast":null,"code":"var _jsxFileName = \"/home/user/work/devconnector/client/src/components/post/CommentItem.jsx\";\nimport React, { Fragment, useEffect } from 'react';\nimport Moment from 'react-moment';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteComment } from '../../actions/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentItem = ({\n  postId,\n  comment: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    date\n  },\n  auth,\n  deleteComment\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  class: \"post bg-white p-1 my-1\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: `/profile/${user}`,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        class: \"round-img\",\n        src: avatar,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      class: \"my-1\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      class: \"post-date\",\n      children: [\"Posted on \", /*#__PURE__*/_jsxDEV(Moment, {\n        format: \"YYYY/MM/DD\",\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), !auth.loading && user === auth.user._id && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => deleteComment(postId, _id),\n      type: \"button\",\n      className: \"btn btn-da\",\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 3\n}, this);\n\n_c = CommentItem;\nCommentItem.propTypes = {\n  postId: PropTypes.number.isRequired,\n  comment: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deleteComment: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  deleteComment\n})(CommentItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentItem\");","map":{"version":3,"sources":["/home/user/work/devconnector/client/src/components/post/CommentItem.jsx"],"names":["React","Fragment","useEffect","Moment","Link","connect","PropTypes","deleteComment","CommentItem","postId","comment","_id","text","name","avatar","user","date","auth","loading","propTypes","number","isRequired","object","func","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,oBAA9B;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AACnBC,EAAAA,MADmB;AAEnBC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,IAAP;AAAaC,IAAAA,IAAb;AAAmBC,IAAAA,MAAnB;AAA2BC,IAAAA,IAA3B;AAAiCC,IAAAA;AAAjC,GAFU;AAGnBC,EAAAA,IAHmB;AAInBV,EAAAA;AAJmB,CAAD,kBAMlB;AAAK,EAAA,KAAK,EAAC,wBAAX;AAAA,0BACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAG,YAAWQ,IAAK,EAA3B;AAAA,8BACE;AAAK,QAAA,KAAK,EAAC,WAAX;AAAuB,QAAA,GAAG,EAAED,MAA5B;AAAoC,QAAA,GAAG,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAKD;AAAL;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF,eAOE;AAAA,4BACE;AAAG,MAAA,KAAK,EAAC,MAAT;AAAA,gBAAiBD;AAAjB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAG,MAAA,KAAK,EAAC,WAAT;AAAA,4CACY,QAAC,MAAD;AAAQ,QAAA,MAAM,EAAC,YAAf;AAAA,kBAA6BI;AAA7B;AAAA;AAAA;AAAA;AAAA,cADZ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAKG,CAACC,IAAI,CAACC,OAAN,IAAiBH,IAAI,KAAKE,IAAI,CAACF,IAAL,CAAUJ,GAApC,iBACC;AAAQ,MAAA,OAAO,EAAE,MAAMJ,aAAa,CAACE,MAAD,EAASE,GAAT,CAApC;AAAmD,MAAA,IAAI,EAAC,QAAxD;AAAiE,MAAA,SAAS,EAAC,YAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAPF;AAAA;AAAA;AAAA;AAAA;AAAA,QANF;;KAAMH,W;AA2BNA,WAAW,CAACW,SAAZ,GAAwB;AACtBV,EAAAA,MAAM,EAAEH,SAAS,CAACc,MAAV,CAAiBC,UADH;AAEtBX,EAAAA,OAAO,EAAEJ,SAAS,CAACgB,MAAV,CAAiBD,UAFJ;AAGtBJ,EAAAA,IAAI,EAAEX,SAAS,CAACgB,MAAV,CAAiBD,UAHD;AAItBd,EAAAA,aAAa,EAAED,SAAS,CAACiB,IAAV,CAAeF;AAJR,CAAxB;;AAOA,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAChCR,EAAAA,IAAI,EAAEQ,KAAK,CAACR;AADoB,CAAL,CAA7B;;AAGA,eAAeZ,OAAO,CAACmB,eAAD,EAAkB;AAAEjB,EAAAA;AAAF,CAAlB,CAAP,CAA4CC,WAA5C,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport Moment from 'react-moment';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteComment } from '../../actions/post';\n\nconst CommentItem = ({\n  postId,\n  comment: { _id, text, name, avatar, user, date },\n  auth,\n  deleteComment,\n}) => (\n  <div class=\"post bg-white p-1 my-1\">\n    <div>\n      <Link to={`/profile/${user}`}>\n        <img class=\"round-img\" src={avatar} alt=\"\" />\n        <h4>{name}</h4>\n      </Link>\n    </div>\n    <div>\n      <p class=\"my-1\">{text}</p>\n      <p class=\"post-date\">\n        Posted on <Moment format=\"YYYY/MM/DD\">{date}</Moment>\n      </p>\n      {!auth.loading && user === auth.user._id && (\n        <button onClick={() => deleteComment(postId, _id)} type=\"button\" className=\"btn btn-da\">\n          X\n        </button>\n      )}\n    </div>\n  </div>\n);\n\nCommentItem.propTypes = {\n  postId: PropTypes.number.isRequired,\n  comment: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  deleteComment: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n});\nexport default connect(mapStateToProps, { deleteComment })(CommentItem);\n"]},"metadata":{},"sourceType":"module"}