{"ast":null,"code":"var _jsxFileName = \"/home/user/work/devconnector/client/src/components/profile/Profile.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getProfileById } from '../../actions/profile';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation';\nimport ProfileGithub from './ProfileGithub';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Profile = ({\n  getProfileById,\n  profile: {\n    profile,\n    loading\n  },\n  auth,\n  match\n}) => {\n  _s();\n\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: profile === null || loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/profiles\",\n        className: \"btn btn-light\",\n        children: \"Back to Profiles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/edit-profile\",\n        className: \"btn btn-dark\",\n        children: \"Edit Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-grid my-1\",\n        children: [/*#__PURE__*/_jsxDEV(ProfileTop, {\n          profile: profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ProfileAbout, {\n          profile: profile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-exp bg-white p-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-primary\",\n            children: \"Experience\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this), profile.experience.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: profile.experience.map(experience => /*#__PURE__*/_jsxDEV(ProfileExperience, {\n              experience: experience\n            }, experience._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 19\n            }, this))\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"No experience credentials\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-exp bg-white p-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-primary\",\n            children: \"Education\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), profile.education.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: profile.education.map(edu => /*#__PURE__*/_jsxDEV(ProfileEducation, {\n              education: edu\n            }, edu._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this))\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"No education credentials\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), profile.githubusername && /*#__PURE__*/_jsxDEV(ProfileGithub, {\n          username: profile.githubusername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n};\n\n_s(Profile, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Profile;\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/user/work/devconnector/client/src/components/profile/Profile.jsx"],"names":["React","useEffect","Link","connect","Spinner","getProfileById","ProfileTop","ProfileAbout","ProfileExperience","ProfileEducation","ProfileGithub","Profile","profile","loading","auth","match","params","id","isAuthenticated","user","_id","experience","length","map","education","edu","githubusername","propTypes","PropTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;;AAGA,MAAMC,OAAO,GAAG,CAAC;AACfN,EAAAA,cADe;AAEfO,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAFM;AAGfC,EAAAA,IAHe;AAIfC,EAAAA;AAJe,CAAD,KAKV;AAAA;;AACJd,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,cAAc,CAACU,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAd;AACD,GAFQ,EAEN,CAACZ,cAAD,EAAiBU,KAAK,CAACC,MAAN,CAAaC,EAA9B,CAFM,CAAT;AAIA,sBACE;AAAA,cACGL,OAAO,KAAK,IAAZ,IAAoBC,OAApB,gBACC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,WAAT;AAAqB,QAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIGC,IAAI,CAACI,eAAL,IACCJ,IAAI,CAACD,OAAL,KAAiB,KADlB,IAECC,IAAI,CAACK,IAAL,CAAUC,GAAV,KAAkBR,OAAO,CAACO,IAAR,CAAaC,GAFhC,iBAGG,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,eAAT;AAAyB,QAAA,SAAS,EAAC,cAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPN,eAWE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAER;AAArB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,YAAD;AAAc,UAAA,OAAO,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAK,UAAA,SAAS,EAAC,0BAAf;AAAA,kCACA;AAAI,YAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,EAECA,OAAO,CAACS,UAAR,CAAmBC,MAAnB,GAA4B,CAA5B,gBACC;AAAA,sBACGV,OAAO,CAACS,UAAR,CAAmBE,GAAnB,CAAuBF,UAAU,iBAChC,QAAC,iBAAD;AAAyC,cAAA,UAAU,EAAEA;AAArD,eAAyBA,UAAU,CAACD,GAApC;AAAA;AAAA;AAAA;AAAA,oBADD;AADH,2BADD,gBAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARL;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAaE;AAAK,UAAA,SAAS,EAAC,0BAAf;AAAA,kCACA;AAAI,YAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,EAECR,OAAO,CAACY,SAAR,CAAkBF,MAAlB,GAA2B,CAA3B,gBACC;AAAA,sBACGV,OAAO,CAACY,SAAR,CAAkBD,GAAlB,CAAsBE,GAAG,iBACxB,QAAC,gBAAD;AAAiC,cAAA,SAAS,EAAEA;AAA5C,eAAwBA,GAAG,CAACL,GAA5B;AAAA;AAAA;AAAA;AAAA,oBADD;AADH,2BADD,gBAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARL;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,EAuBGR,OAAO,CAACc,cAAR,iBACC,QAAC,aAAD;AAAe,UAAA,QAAQ,EAAEd,OAAO,CAACc;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAJJ,mBADF;AA+CD,CAzDD;;GAAMf,O;;KAAAA,O;AA2DNA,OAAO,CAACgB,SAAR,GAAoB;AAClBtB,EAAAA,cAAc,EAAEuB,SAAS,CAACC,IAAV,CAAeC,UADb;AAElBlB,EAAAA,OAAO,EAAEgB,SAAS,CAACG,MAAV,CAAiBD,UAFR;AAGlBhB,EAAAA,IAAI,EAAEc,SAAS,CAACG,MAAV,CAAiBD;AAHL,CAApB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCrB,EAAAA,OAAO,EAAEqB,KAAK,CAACrB,OADiB;AAEhCE,EAAAA,IAAI,EAAEmB,KAAK,CAACnB;AAFoB,CAAL,CAA7B;;AAKA,eAAeX,OAAO,CAAC6B,eAAD,EAAkB;AAAE3B,EAAAA;AAAF,CAAlB,CAAP,CAA6CM,OAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getProfileById } from '../../actions/profile';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience'\nimport ProfileEducation from './ProfileEducation'\nimport ProfileGithub from './ProfileGithub'\n\n\nconst Profile = ({\n  getProfileById,\n  profile: { profile, loading },\n  auth,\n  match,\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n\n  return (\n    <>\n      {profile === null || loading ? (\n        <Spinner />\n      ) : (\n        <>\n          <Link to=\"/profiles\" className=\"btn btn-light\">\n            Back to Profiles\n          </Link>\n          {auth.isAuthenticated &&\n            auth.loading === false &&\n            auth.user._id === profile.user._id && (\n              <Link to=\"/edit-profile\" className=\"btn btn-dark\">\n                Edit Profile\n              </Link>\n            )}\n          <div className=\"profile-grid my-1\">\n            <ProfileTop profile={profile} />\n            <ProfileAbout profile={profile} />\n            <div className=\"profile-exp bg-white p-2\">\n            <h2 className=\"text-primary\">Experience</h2>\n            {profile.experience.length > 0 ? (\n              <>\n                {profile.experience.map(experience => (\n                  <ProfileExperience key= {experience._id} experience={experience}/>\n                ))}\n              </>\n            ) : (<h4>No experience credentials</h4>)}\n            </div>\n            <div className=\"profile-exp bg-white p-2\">\n            <h2 className=\"text-primary\">Education</h2>\n            {profile.education.length > 0 ? (\n              <>\n                {profile.education.map(edu => (\n                  <ProfileEducation key= {edu._id} education={edu}/>\n                ))}\n              </>\n            ) : (<h4>No education credentials</h4>)}\n            </div>\n            {profile.githubusername && (\n              <ProfileGithub username={profile.githubusername}/>\n            )}\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { getProfileById })(Profile);\n"]},"metadata":{},"sourceType":"module"}