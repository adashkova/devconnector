{"ast":null,"code":"import { GET_POSTS, POST_ERROR, ADD_POST, DELETE_POST, UPDATE_LIKES, GET_POST, ADD_COMMENT, REMOVE_COMMENT } from '../actions/types';\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\nexport const post = (state = initialState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n  console.log(payload);\n\n  switch (type) {\n    case GET_POSTS:\n      return { ...state,\n        posts: payload,\n        loading: false\n      };\n\n    case GET_POST:\n      return { ...state,\n        post: payload,\n        loading: false\n      };\n\n    case ADD_POST:\n      return { ...state,\n        posts: [payload, ...state.posts],\n        loading: false\n      };\n\n    case POST_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    case DELETE_POST:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== payload),\n        loading: false\n      };\n\n    case UPDATE_LIKES:\n      return { ...state,\n        posts: state.posts.map(post => post._id === payload.postId ? { ...post,\n          likes: payload.likes\n        } : post),\n        loading: false\n      };\n\n    case ADD_COMMENT:\n      return { ...state,\n        post: { ...state.post,\n          comments: payload\n        },\n        loading: false\n      };\n\n    case REMOVE_COMMENT:\n      return { ...state,\n        post: { ...state.post,\n          comments: payload\n        },\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/user/work/devconnector/client/src/reducers/post.js"],"names":["GET_POSTS","POST_ERROR","ADD_POST","DELETE_POST","UPDATE_LIKES","GET_POST","ADD_COMMENT","REMOVE_COMMENT","initialState","posts","post","loading","error","state","action","type","payload","console","log","filter","_id","map","postId","likes","comments"],"mappings":"AAAA,SACEA,SADF,EAEEC,UAFF,EAGEC,QAHF,EAIEC,WAJF,EAKEC,YALF,EAMEC,QANF,EAOEC,WAPF,EAQEC,cARF,QASO,kBATP;AAWA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,IAAI,EAAE,IAFa;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAOA,OAAO,MAAMF,IAAI,GAAG,CAACG,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACpD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AAGA,UAAQD,IAAR;AACE,SAAKf,SAAL;AACE,aAAO,EACL,GAAGa,KADE;AAELJ,QAAAA,KAAK,EAAEO,OAFF;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKA,SAAKN,QAAL;AACA,aAAO,EACL,GAAGQ,KADE;AAELH,QAAAA,IAAI,EAAEM,OAFD;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKA,SAAKT,QAAL;AACA,aAAO,EACL,GAAGW,KADE;AAELJ,QAAAA,KAAK,EAAC,CAAEO,OAAF,EAAU,GAAGH,KAAK,CAACJ,KAAnB,CAFD;AAGLE,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKV,UAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELD,QAAAA,KAAK,EAAEI,OAFF;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKR,WAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYU,MAAZ,CAAmBT,IAAI,IAAIA,IAAI,CAACU,GAAL,KAAaJ,OAAxC,CAFF;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKP,YAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYY,GAAZ,CAAgBX,IAAI,IACzBA,IAAI,CAACU,GAAL,KAAaJ,OAAO,CAACM,MAArB,GAA8B,EAAE,GAAGZ,IAAL;AAAWa,UAAAA,KAAK,EAAEP,OAAO,CAACO;AAA1B,SAA9B,GAAkEb,IAD7D,CAFF;AAKLC,QAAAA,OAAO,EAAE;AALJ,OAAP;;AAOA,SAAKL,WAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELH,QAAAA,IAAI,EAAE,EAAE,GAAGG,KAAK,CAACH,IAAX;AAAiBc,UAAAA,QAAQ,EAAER;AAA3B,SAFD;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKA,SAAKJ,cAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELH,QAAAA,IAAI,EAAE,EAAE,GAAGG,KAAK,CAACH,IAAX;AACLc,UAAAA,QAAQ,EAAER;AADL,SAFD;AAILL,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAON;AACE,aAAOE,KAAP;AAtDJ;AAwDD,CA7DM","sourcesContent":["import {\n  GET_POSTS,\n  POST_ERROR,\n  ADD_POST,\n  DELETE_POST,\n  UPDATE_LIKES,\n  GET_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT\n} from '../actions/types';\n\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {},\n};\n\nexport const post = (state = initialState, action) => {\n  const { type, payload } = action;\n  console.log(payload);\n  \n\n  switch (type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        loading: false,\n      };\n      case GET_POST:\n      return {\n        ...state,\n        post: payload,\n        loading: false,\n      };\n      case ADD_POST:\n      return {\n        ...state,\n        posts:[ payload,...state.posts],\n        loading: false,\n      };\n    case POST_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter(post => post._id !== payload),\n        loading: false,\n      };\n    case UPDATE_LIKES:\n      return {\n        ...state,\n        posts: state.posts.map(post =>\n          post._id === payload.postId ? { ...post, likes: payload.likes } : post\n        ),\n        loading: false,\n      };\n      case ADD_COMMENT:\n        return {\n          ...state,\n          post: { ...state.post, comments: payload },\n          loading: false,\n        };\n        case REMOVE_COMMENT:\n          return {\n            ...state,\n            post: { ...state.post,\n             comments: payload },\n            loading: false,\n          };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}