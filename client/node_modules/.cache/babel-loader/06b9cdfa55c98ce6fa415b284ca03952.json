{"ast":null,"code":"var _jsxFileName = \"/home/user/work/devconnector/client/src/components/dashboard/Dashboard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { getCurrentProfile } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\nimport { Fragment } from 'react';\nimport DashboardActions from './DashboardActions';\nimport Experience from './Experience';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = ({\n  getCurrentProfile,\n  auth: {\n    user\n  },\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  _s();\n\n  useEffect(() => {\n    getCurrentProfile();\n  }, []);\n  return loading && profile === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      class: \"large text-primary\",\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      class: \"lead\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"fas fa-user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), \" Welcome, \", user && user.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), profile !== null ? /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(DashboardActions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Experience, {\n        experience: profile.exp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You have not yet setup a profile, please add some info!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/create-profile\",\n        className: \"btn btn-primary my-1\",\n        children: \"Create Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Dashboard;\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile\n})(Dashboard);\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/user/work/devconnector/client/src/components/dashboard/Dashboard.jsx"],"names":["React","useEffect","connect","Link","PropTypes","getCurrentProfile","Spinner","Fragment","DashboardActions","Experience","Dashboard","auth","user","profile","loading","name","exp","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AACjBL,EAAAA,iBADiB;AAEjBM,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF,GAFW;AAGjBC,EAAAA,OAAO,EAAE;AAAEA,IAAAA,OAAF;AAAWC,IAAAA;AAAX;AAHQ,CAAD,KAIZ;AAAA;;AACJb,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,iBAAiB;AAClB,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAOS,OAAO,IAAID,OAAO,KAAK,IAAvB,gBACL,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UADK,gBAGL,QAAC,QAAD;AAAA,4BACE;AAAI,MAAA,KAAK,EAAC,oBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAG,MAAA,KAAK,EAAC,MAAT;AAAA,8BACE;AAAG,QAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,cADF,gBACwCD,IAAI,IAAIA,IAAI,CAACG,IADrD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAKGF,OAAO,KAAK,IAAZ,gBACC,QAAC,QAAD;AAAA,8BACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AAAY,QAAA,UAAU,EAAEA,OAAO,CAACG;AAAhC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAMC,QAAC,QAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,iBAAT;AAA2B,QAAA,SAAS,EAAC,sBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF;AAqBD,CA9BD;;GAAMN,S;;KAAAA,S;AAgCNA,SAAS,CAACO,SAAV,GAAsB;AACpBZ,EAAAA,iBAAiB,EAAED,SAAS,CAACc,IAAV,CAAeC,UADd;AAEpBR,EAAAA,IAAI,EAAEP,SAAS,CAACgB,MAAV,CAAiBD,UAFH;AAGpBN,EAAAA,OAAO,EAAET,SAAS,CAACgB,MAAV,CAAiBD;AAHN,CAAtB;;AAMA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCX,EAAAA,IAAI,EAAEW,KAAK,CAACX,IADoB;AAEhCE,EAAAA,OAAO,EAAES,KAAK,CAACT;AAFiB,CAAL,CAA7B;;AAKA,eAAeX,OAAO,CAACmB,eAAD,EAAkB;AAAEhB,EAAAA;AAAF,CAAlB,CAAP,CAAgDK,SAAhD,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport {Link} from 'react-router-dom'\nimport PropTypes from 'prop-types';\nimport { getCurrentProfile } from '../../actions/profile';\nimport Spinner from '../layout/Spinner';\nimport { Fragment } from 'react';\nimport DashboardActions from './DashboardActions';\nimport Experience from './Experience';\n\nconst Dashboard = ({\n  getCurrentProfile,\n  auth: { user },\n  profile: { profile, loading },\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, []);\n\n  return loading && profile === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n      <h1 class=\"large text-primary\">Dashboard</h1>\n      <p class=\"lead\">\n        <i class=\"fas fa-user\"></i> Welcome, {user && user.name}\n      </p>\n      {profile !== null ? (\n        <Fragment>\n          <DashboardActions />\n          <Experience experience={profile.exp}/>\n        </Fragment>\n      ) : (\n        <Fragment>\n            <p>You have not yet setup a profile, please add some info!</p>\n            <Link to='/create-profile' className=\"btn btn-primary my-1\">Create Profile</Link>\n            </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile })(Dashboard);\n"]},"metadata":{},"sourceType":"module"}