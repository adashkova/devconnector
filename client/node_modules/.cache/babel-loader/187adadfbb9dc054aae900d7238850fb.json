{"ast":null,"code":"var _jsxFileName = \"/home/user/work/devconnector/client/src/components/profile/Profiles.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getProfiles } from '../../actions/profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profiles = ({\n  getProfiles,\n  profile: {\n    profiles,\n    loading\n  }\n}) => {\n  _s();\n\n  useEffect(() => {\n    getProfiles();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"large text-primary\",\n        children: \"Developers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lead\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fab fa-connectdevelop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 33\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Profiles, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Profiles;\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getProfiles\n})(Profiles);\n\nvar _c;\n\n$RefreshReg$(_c, \"Profiles\");","map":{"version":3,"sources":["/home/user/work/devconnector/client/src/components/profile/Profiles.jsx"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getProfiles","Profiles","profile","profiles","loading","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,WAAR,QAA0B,uBAA1B;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACD,EAAAA,WAAD;AAAcE,EAAAA,OAAO,EAAE;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX;AAAvB,CAAD,KAAiD;AAAA;;AAE9DR,EAAAA,SAAS,CAAC,MAAK;AACXI,IAAAA,WAAW;AACd,GAFQ,EAEN,EAFM,CAAT;AAMA,sBAAO,QAAC,QAAD;AAAA,cACFI,OAAO,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAgB,QAAC,QAAD;AAAA,8BACpB;AAAI,QAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADoB,eAEpB;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA,+BACI;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFoB;AAAA;AAAA;AAAA;AAAA;AAAA;AADrB;AAAA;AAAA;AAAA;AAAA,UAAP;AAQH,CAhBD;;GAAMH,Q;;KAAAA,Q;AAkBNA,QAAQ,CAACI,SAAT,GAAqB;AACrBL,EAAAA,WAAW,EAAEH,SAAS,CAACS,IAAV,CAAeC,UADP;AAErBL,EAAAA,OAAO,EAAEL,SAAS,CAACW,MAAV,CAAiBD;AAFL,CAArB;;AAIA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BR,EAAAA,OAAO,EAAEQ,KAAK,CAACR;AADe,CAAL,CAA7B;;AAIA,eAAeJ,OAAO,CAACW,eAAD,EAAiB;AAACT,EAAAA;AAAD,CAAjB,CAAP,CAAuCC,QAAvC,CAAf","sourcesContent":["import React, {Fragment, useEffect} from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport Spinner from '../layout/Spinner'\nimport {getProfiles} from '../../actions/profile'\n\nconst Profiles = ({getProfiles, profile: {profiles, loading}}) => {\n\n    useEffect(()=> {\n        getProfiles()\n    }, [])\n\n\n\n    return <Fragment>\n        {loading ? <Spinner/> : <Fragment>\n            <h1 className=\"large text-primary\">Developers</h1>\n            <p className=\"lead\">\n                <i className='fab fa-connectdevelop'></i>\n            </p>\n        </Fragment> }\n    </Fragment>\n}\n\nProfiles.propTypes = {\ngetProfiles: PropTypes.func.isRequired,\nprofile: PropTypes.object.isRequired,\n}\nconst mapStateToProps = state => ({\n    profile: state.profile\n})\n\nexport default connect(mapStateToProps,{getProfiles})(Profiles)\n"]},"metadata":{},"sourceType":"module"}