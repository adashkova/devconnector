{"ast":null,"code":"var _jsxFileName = \"/home/user/work/devconnector/client/src/components/post/Post.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Spinner from '../layout/Spinner';\nimport PostItem from '../posts/PostItem';\nimport PropTypes from 'prop-types';\nimport { getPost } from '../../actions/post';\nimport CommentForm from './CommentForm';\nimport CommentItem from './';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = ({\n  getPost,\n  post: {\n    post,\n    loading\n  },\n  match\n}) => {\n  _s();\n\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost]);\n  return loading || post === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/posts\",\n      className: \"btn\",\n      children: \" Back To Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PostItem, {\n      post: post,\n      showActions: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentForm, {\n      postId: post._id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment\",\n      children: post.comments.map(comment => {\n        return /*#__PURE__*/_jsxDEV(CommentItem, {\n          comment: comment,\n          postId: post._id\n        }, comment._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Post, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Post;\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPost\n})(Post);\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/home/user/work/devconnector/client/src/components/post/Post.jsx"],"names":["React","Fragment","useEffect","connect","Link","Spinner","PostItem","PropTypes","getPost","CommentForm","CommentItem","Post","post","loading","match","params","id","_id","comments","map","comment","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,IAAxB;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEH,EAAAA,OAAF;AAAWI,EAAAA,IAAI,EAAE;AAAEA,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAjB;AAAoCC,EAAAA;AAApC,CAAD,KAAiD;AAAA;;AAC5DZ,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,OAAO,CAACM,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAP;AACD,GAFQ,EAEN,CAACR,OAAD,CAFM,CAAT;AAIA,SAAOK,OAAO,IAAID,IAAI,KAAK,IAApB,gBACL,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UADK,gBAGL,QAAC,QAAD;AAAA,4BACI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,QAAT;AAAkB,MAAA,SAAS,EAAC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEA,IAAhB;AAAsB,MAAA,WAAW,EAAE;AAAnC;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,WAAD;AAAa,MAAA,MAAM,EAAEA,IAAI,CAACK;AAA1B;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBACKL,IAAI,CAACM,QAAL,CAAcC,GAAd,CAAkBC,OAAO,IAAK;AAC7B,4BAAQ,QAAC,WAAD;AAA+B,UAAA,OAAO,EAAEA,OAAxC;AAAiD,UAAA,MAAM,EAAER,IAAI,CAACK;AAA9D,WAAkBG,OAAO,CAACH,GAA1B;AAAA;AAAA;AAAA;AAAA,gBAAR;AACC,OAFF;AADL;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF;AAcD,CAnBD;;GAAMN,I;;KAAAA,I;AAqBNA,IAAI,CAACU,SAAL,GAAiB;AACfb,EAAAA,OAAO,EAAED,SAAS,CAACe,IAAV,CAAeC,UADT;AAEfX,EAAAA,IAAI,EAAEL,SAAS,CAACiB,MAAV,CAAiBD;AAFR,CAAjB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAChCd,EAAAA,IAAI,EAAEc,KAAK,CAACd;AADoB,CAAL,CAA7B;;AAIA,eAAeT,OAAO,CAACsB,eAAD,EAAkB;AAAEjB,EAAAA;AAAF,CAAlB,CAAP,CAAsCG,IAAtC,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Spinner from '../layout/Spinner';\nimport PostItem from '../posts/PostItem';\nimport PropTypes from 'prop-types';\nimport { getPost } from '../../actions/post';\nimport CommentForm from './CommentForm';\nimport CommentItem from './'\n\nconst Post = ({ getPost, post: { post, loading }, match }) => {\n  useEffect(() => {\n    getPost(match.params.id);\n  }, [getPost]);\n\n  return loading || post === null ? (\n    <Spinner />\n  ) : (\n    <Fragment>\n        <Link to='/posts' className='btn'> Back To Posts</Link>\n      <PostItem post={post} showActions={false} />\n      <CommentForm postId={post._id}/>\n      <div className=\"comment\">\n          {post.comments.map(comment =>  {\n            return  <CommentItem key={comment._id} comment={comment} postId={post._id} />\n            }  )}\n      </div>\n    </Fragment>\n  );\n};\n\nPost.propTypes = {\n  getPost: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  post: state.post,\n});\n\nexport default connect(mapStateToProps, { getPost })(Post);  \n"]},"metadata":{},"sourceType":"module"}