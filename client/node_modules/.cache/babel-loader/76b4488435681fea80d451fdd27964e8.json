{"ast":null,"code":"var _jsxFileName = \"/home/user/work/devconnector/client/src/components/post/CommentForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addComment } from '../../actions/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentForm = ({\n  postId,\n  addComment\n}) => {\n  _s();\n\n  const [text, setText] = useState('');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"post-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"bg-primary p\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Leave A Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      class: \"form my-1\",\n      onSubmit: e => {\n        e.preventDefault();\n        addComment(postId, {\n          text\n        });\n        setText('');\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"text\",\n        cols: \"30\",\n        rows: \"5\",\n        placeholder: \"Comment on this post\",\n        value: text,\n        onChange: e => setText(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        class: \"btn btn-dark my-1\",\n        value: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CommentForm, \"M8VhbSOru85VOsk7T2j5DvKRp+M=\");\n\n_c = CommentForm;\nCommentForm.propTypes = {\n  addComment: PropTypes.func.isRequired,\n  postId: PropTypes.string.isRequired\n};\nexport default connect(null, {\n  addComment\n})(CommentForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"sources":["/home/user/work/devconnector/client/src/components/post/CommentForm.jsx"],"names":["React","useState","PropTypes","connect","addComment","CommentForm","postId","text","setText","e","preventDefault","target","value","propTypes","func","isRequired","string"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,UAAT,QAA2B,oBAA3B;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAACC,EAAAA,MAAD;AAASF,EAAAA;AAAT,CAAD,KAA0B;AAAA;;AAC1C,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AAGA,sBACI;AAAK,IAAA,KAAK,EAAC,WAAX;AAAA,4BACA;AAAK,MAAA,KAAK,EAAC,cAAX;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA,eAIA;AACE,MAAA,KAAK,EAAC,WADR;AAEE,MAAA,QAAQ,EAAEQ,CAAC,IAAI;AACbA,QAAAA,CAAC,CAACC,cAAF;AACAN,QAAAA,UAAU,CAACE,MAAD,EAAQ;AAAEC,UAAAA;AAAF,SAAR,CAAV;AACAC,QAAAA,OAAO,CAAC,EAAD,CAAP;AACD,OANH;AAAA,8BAQE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,IAFP;AAGE,QAAA,IAAI,EAAC,GAHP;AAIE,QAAA,WAAW,EAAC,sBAJd;AAKE,QAAA,KAAK,EAAED,IALT;AAME,QAAA,QAAQ,EAAEE,CAAC,IAAID,OAAO,CAACC,CAAC,CAACE,MAAF,CAASC,KAAV,CANxB;AAOE,QAAA,QAAQ;AAPV;AAAA;AAAA;AAAA;AAAA,cARF,eAiBE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,mBAA3B;AAA+C,QAAA,KAAK,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CA9BD;;GAAMP,W;;KAAAA,W;AAgCNA,WAAW,CAACQ,SAAZ,GAAwB;AACpBT,EAAAA,UAAU,EAAEF,SAAS,CAACY,IAAV,CAAeC,UADP;AAEpBT,EAAAA,MAAM,EAAEJ,SAAS,CAACc,MAAV,CAAiBD;AAFL,CAAxB;AAKA,eAAeZ,OAAO,CAAC,IAAD,EAAO;AAACC,EAAAA;AAAD,CAAP,CAAP,CAA6BC,WAA7B,CAAf","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\nimport {connect} from 'react-redux'\nimport { addComment } from '../../actions/post'\n\nconst CommentForm = ({postId, addComment}) => {\n    const [text, setText] = useState('');\n\n\n    return (\n        <div class=\"post-form\">\n        <div class=\"bg-primary p\">\n          <h3>Leave A Comment</h3>\n        </div>\n        <form\n          class=\"form my-1\"\n          onSubmit={e => {\n            e.preventDefault();\n            addComment(postId,{ text });\n            setText('');\n          }}\n        >\n          <textarea\n            name=\"text\"\n            cols=\"30\"\n            rows=\"5\"\n            placeholder=\"Comment on this post\"\n            value={text}\n            onChange={e => setText(e.target.value)}\n            required\n          ></textarea>\n          <input type=\"submit\" class=\"btn btn-dark my-1\" value=\"Submit\" />\n        </form>\n      </div>\n    )\n}\n\nCommentForm.propTypes = {\n    addComment: PropTypes.func.isRequired,\n    postId: PropTypes.string.isRequired,\n}\n\nexport default connect(null, {addComment}) (CommentForm)\n"]},"metadata":{},"sourceType":"module"}