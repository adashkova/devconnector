{"ast":null,"code":"var _jsxFileName = \"/home/user/work/devconnector/client/src/components/profile/ProfileGithub.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getGithubRepos } from '../../actions/profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileGithub = ({\n  username,\n  getGithubRepos,\n  repos\n}) => {\n  _s();\n\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos(username)]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"profile-github\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      class: \"text-primary my-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"fab fa-github\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), \" Github Repos\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), repos === 0]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 11\n  }, this);\n};\n\n_s(ProfileGithub, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ProfileGithub;\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\n\nexport default connect(mapStateToProps, {\n  getGithubRepos\n})(ProfileGithub);\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileGithub\");","map":{"version":3,"sources":["/home/user/work/devconnector/client/src/components/profile/ProfileGithub.jsx"],"names":["React","useEffect","PropTypes","connect","Spinner","getGithubRepos","ProfileGithub","username","repos","propTypes","func","isRequired","array","string","mapStateToProps","state","profile"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,uBAA/B;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYF,EAAAA,cAAZ;AAA4BG,EAAAA;AAA5B,CAAD,KAAyC;AAAA;;AAE3DP,EAAAA,SAAS,CAAC,MAAM;AACfI,IAAAA,cAAc,CAACE,QAAD,CAAd;AACA,GAFQ,EAEN,CAACF,cAAc,CAACE,QAAD,CAAf,CAFM,CAAT;AAGF,sBAAQ;AAAK,IAAA,KAAK,EAAC,gBAAX;AAAA,4BACF;AAAI,MAAA,KAAK,EAAC,mBAAV;AAAA,8BACI;AAAG,QAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,cADJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADE,EAICC,KAAK,KAAK,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAMD,CAXD;;GAAMF,a;;KAAAA,a;AAaNA,aAAa,CAACG,SAAd,GAA0B;AACxBJ,EAAAA,cAAc,EAAEH,SAAS,CAACQ,IAAV,CAAeC,UADP;AAExBH,EAAAA,KAAK,EAAEN,SAAS,CAACU,KAAV,CAAgBD,UAFC;AAGxBJ,EAAAA,QAAQ,EAAEL,SAAS,CAACW,MAAV,CAAiBF;AAHH,CAA1B;;AAKA,MAAMG,eAAe,GAAGC,KAAK,KAAK;AAChCP,EAAAA,KAAK,EAAEO,KAAK,CAACC,OAAN,CAAcR;AADW,CAAL,CAA7B;;AAGA,eAAeL,OAAO,CAACW,eAAD,EAAkB;AAAET,EAAAA;AAAF,CAAlB,CAAP,CAA6CC,aAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getGithubRepos } from '../../actions/profile';\n\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\n\n    useEffect(() => {\n     getGithubRepos(username)\n    }, [getGithubRepos(username)]);\n  return  <div class=\"profile-github\">\n        <h2 class=\"text-primary my-1\">\n            <i class=\"fab fa-github\"></i> Github Repos\n          </h2>\n          {repos === 0}\n  </div>;\n};\n\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired,\n};\nconst mapStateToProps = state => ({\n  repos: state.profile.repos,\n});\nexport default connect(mapStateToProps, { getGithubRepos })(ProfileGithub);\n"]},"metadata":{},"sourceType":"module"}